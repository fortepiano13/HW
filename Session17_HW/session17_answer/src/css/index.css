@import "./ui/modal.css";
@import "./ui/button.css";
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap");

html,
body {
  margin: 0;
  font-family: "Noto Sans KR", sans-serif;
  font-size: 1rem;
  font-weight: normal;
  line-height: 1.5;
  background-color: #f1f5f9;
}

#app {
  max-width: 960px;
  margin: 0 auto;
}

a {
  text-decoration: none;
}

main .wrapper {
  width: 540px;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
  border-radius: 4px;
}

ul li button {
  width: 60px;
  line-height: inherit;
  cursor: pointer;
  height: auto;
  border: none;
  outline: none;
  border-radius: 2rem;
}

#schedule-list {
  padding: 0;
}

.schedule-title {
  display: block;
  font-size: 1.3rem;
  font-weight: 700;
  color: purple;
}

.schedule-time {
  font-size: 1rem;
  font-weight: 600;
}

.schedule-place {
  font-size: 1rem;
  font-weight: 500;
  color: gray;
}

.shadow {
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
}

.w-100 {
  width: 100%;
}

.p-10 {
  padding: 10px;
}

.p-50 {
  padding: 50px;
}

.mb-10 {
  margin-bottom: 10px;
}

.mt-10 {
  margin-top: 10px;
}

.ml-10 {
  margin-left: 10px;
}

.mr-10 {
  margin-right: 10px;
}

.mt-30 {
  margin-top: 30px;
}

.mb-30 {
  margin-bottom: 30px;
}

.bg-white {
  background-color: rgb(255, 255, 255);
}

.bg-purple {
  background-color: rgb(196, 181, 253);
}

.text-gray {
  color: gray;
}

.text-black {
  color: black;
}

.text-purple {
  color: rgb(196, 181, 253);
}

.font-bold {
  font-weight: 700;
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.flex {
  display: flex;
}

.flex-col {
  flex-direction: column;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.cursor-pointer {
  cursor: pointer;
}

/* input 중에 id가 trigger인 항목에 대한 css */
input[id=trigger] {
  display: none;
}

/* label 중에 for가 trigger인 항목 */
label[for=trigger] {
  /* border: 1px solid red; */
  width: 30px;
  height: 20px;
  display: block;
  position: relative;
  cursor: pointer;
}

/* label 중에 for가 trigger인 항목 안의 span */
label[for=trigger] span {
  display: block;
  height: 2px;
  background-color: #000;
  left: 0;
  width: 100%;
  position: absolute;
  transition: 0.3s;
  z-index: 1000; 
}

/* label[for=trigger] > span의 n번째 요소 */
label[for=trigger] span:nth-child(1) {
  top:0;
}

label[for=trigger] span:nth-child(2) {
  top:50%;
}

label[for=trigger] span:nth-child(3) {
  top:100%;
}

/* check시 변하는 label[for=trigger] > span의 n번째 요소  */
input[id=trigger]:checked + label span:nth-child(1) {
  top: 50%;
  transform: rotate(45deg);
}

input[id=trigger]:checked + label span:nth-child(2) {
  opacity: 0;
}

input[id=trigger]:checked + label span:nth-child(3) {
  top: 50%;
  transform: rotate(-45deg);
}

.sidebar {
  width: 250px;
  height: 100vh;
  background-color: rgb(196, 181, 253);
  position: fixed;
  top: 0;
  left: 0;
  left: -250px;
  transition: 0.3s;
}

/* input[id=trigger]가 체크되었을 때 사이드바가 나오는 형제 인접자 */
input[id=trigger]:checked ~ .sidebar {
  left: 0;
}

/* check시 같이 밀려나가는 CSS 햄버거 메뉴 */
input[id=trigger]:checked + label[for=trigger] {
  left: 210px;
  transition: 0.3s;
}